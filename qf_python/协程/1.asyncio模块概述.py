# python3.4 引入了这个标准库，内置对异步IO的支持

# 编程模式： 有一个消息循环，从asyncio 模块中直接获取一个 EventLoop的引用，然后把需要执行的协程扔到 EventLoop中执行，就实现了异步

# 目前实现协程的模块不仅有 asyncio, 还有gevent 和 tornado 都实现了类似的功能

#  asyncio 关键字说明：
# 1. event_loop 事件循环: 程序开启一个无限循环，将一些函数注册到事件循环中，当满足条件发生时，调用相应的协程函数
# 2. coroutine 协程：协程对象，指一个使用 asyncio 关键字定义的函数。 调用它不会立即执行函数，而是返回一个协程对象。协程需要注册到事件循环中，由事件循环调用
# 3. task 任务：任务是对协程对象的封装，包含了任务的状态
# 4. future： 将来执行或者没有执行的任务的结果，与task没有本质区别
# 5. async/await：用于定义协程的关键字。async 定义一个协程，await用于挂起阻塞异步调用

